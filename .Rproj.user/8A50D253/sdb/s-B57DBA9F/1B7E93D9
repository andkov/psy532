{
    "contents" : "rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.\n#####################################\n## @knitr load_sources\n\n\n\n#####################################\n## @knitr load_packages\n# library(xtable)\n# library(printr)\nlibrary(knitr)\nlibrary(scales) #For formating values in graphs\nlibrary(RColorBrewer)\n# library(reshape2) #For converting wide to long\nlibrary(grid) #For graphing\nlibrary(ggplot2) #For graphing\nlibrary(testit, quietly=TRUE) #For asserts\nlibrary(dplyr)\n\n## @knitr load_data\ndsb <- readRDS('./data/shared/ds1a.rds')\nkeepvar <- c(\"model_number\",\"study_name\",\"subgroup\", \"model_type\",\"physical_construct\",\"cognitive_construct\",\"physical_measure\",\"cognitive_measure\", \"output_file\", \"converged\")\n\ndsDemo <- dsb[ , keepvar]\n# head(dsDemo)\n## @knitr dummy\n\nunique(dsb$study_name)\n\nnames(dsb)\n\n## @knitr number_studies\ncat(paste0(\"**\",length(dsb$study_name),\"**\"))\n\n# @knitr missing_studies\npathDir <- getwd() # establish home directory\npathStudies <- file.path(pathDir,\"studies\")\nmisslong <- list.dirs(pathStudies, recursive = F)\nmissing <- basename(misslong)\npresent <- unique(dsb$study_name)\nmiss <- missing[!(missing %in% present)]\ncat(miss)\n\n\n## @knitr freq_studies\nt1<-table(dsb$study_name)\nt1[t1==0] <- \".\"\nt1\n\n## @knitr cross_table_data_dplyr\nds <- dsDemo\n# dplyr::tbl_df(ds)\n# dplyr::glimpse(ds)\n# utils::View(ds)\nds %>% dplyr::count(converged)\n\n\n## @knitr define_themes\nbaseSize <- 10\ntheme1 <- ggplot2::theme_bw(base_size=baseSize) +\n  ggplot2::theme(title=ggplot2::element_text(colour=\"gray20\",size = baseSize+1)) +\n  ggplot2::theme(axis.text=ggplot2::element_text(colour=\"gray40\", size=baseSize-2)) +\n  ggplot2::theme(axis.title=ggplot2::element_text(colour=\"gray40\")) +\n  ggplot2::theme(panel.border = ggplot2::element_rect(colour=\"gray80\")) +\n  ggplot2::theme(axis.ticks.length = grid::unit(0, \"cm\")) +\n  ggplot2::theme(text = element_text(size =baseSize+7))\n\n\n\n\n\n## @knitr 0_graph_phys_measure\nd <- ds %>% dplyr::count(cognitive_measure, physical_measure)\n\ng <- ggplot2::ggplot(d, aes(x=physical_measure, y=cognitive_measure, fill=n))\ng <- g + geom_tile()\ng <- g + geom_text(aes(label=n), size=baseSize-6)\ng <- g + scale_y_discrete(limits=rev(unique(d$cognitive_measure)))\ng <- g + scale_fill_gradient(low=\"white\", high=\"#e78ac3\", na.value = \"white\")\ng <- g + labs(title=\"Physical Measures \", x=element_blank(), y=\"Cognitive Measures\")\ng <- g + theme1\ng <- g + theme(axis.text.y = element_text(hjust=1, angle=0),\n               axis.text.x = element_text(hjust=1, angle=90, size=9),\n               legend.position=\"top\")\ng\n\n## @knitr 1_graph_study_name\nd <- ds %>% dplyr::count(cognitive_measure, study_name)\ng <- ggplot2::ggplot(d, aes(x=study_name, y=cognitive_measure, fill=n))\ng <- g + geom_tile()\ng <- g + geom_text(aes(label=n), size=baseSize-6)\ng <- g + scale_y_discrete(limits=rev(unique(d$cognitive_measure)))\ng <- g + scale_fill_gradient(low=\"white\", high=\"#8da0cb\", na.value = \"white\")\ng <- g + labs(title=\"Studies \", x=element_blank(), y=\"Cognitive Measures\")\ng <- g + theme1\ng <- g + theme(axis.text.y = element_text(hjust=1, angle=0),\n               axis.text.x = element_text(hjust=1, angle=90, size=9),\n               legend.position=\"top\")\ng\n\n## @knitr 2_graph_model_type\nd <- ds %>% dplyr::count(cognitive_measure, model_type)\ng <- ggplot2::ggplot(d, aes(x=model_type, y=cognitive_measure, fill=n))\ng <- g + geom_tile()\ng <- g + geom_text(aes(label=n), size=baseSize-6)\ng <- g + scale_y_discrete(limits=rev(unique(d$cognitive_measure)))\ng <- g + scale_fill_gradient(low=\"white\", high=\"#fc8d62\", na.value = \"white\")\ng <- g + labs(title=\"Covariate Sets \", x=element_blank(), y=\"Cognitive Measures\")\ng <- g + theme1\ng <- g + theme(axis.text.y = element_text(hjust=1, angle=0),\n               axis.text.x = element_text(hjust=1, angle=90, size=9),\n               legend.position=\"top\")\ng\n\n\n## @knitr 3_graph_subgroup\nd <- ds %>% dplyr::count(cognitive_measure, subgroup)\ng <- ggplot2::ggplot(d, aes(x=subgroup, y=cognitive_measure, fill=n))\ng <- g + geom_tile()\ng <- g + geom_text(aes(label=n), size=baseSize-6)\ng <- g + scale_y_discrete(limits=rev(unique(d$cognitive_measure)))\ng <- g + scale_fill_gradient(low=\"white\", high=\"#66c2a5\", na.value = \"white\")\ng <- g + labs(title=\"Sex \", x=element_blank(), y=\"Cognitive Measures\")\ng <- g + theme1\ng <- g + theme(axis.text.y = element_text(hjust=1, angle=0),\n               axis.text.x = element_text(hjust=1, angle=90, size=9),\n               legend.position=\"top\")\ng\n\n\n## @knitr dummy\n\n#\nds %>% dplyr::count(cognitive_measure, physical_measure, study_name, model_type, subgroup)\n\n\n## @knitr dashboard_tile_graph\nsource(\"./reports/overlap_search_graphs/overlap_tile_graph.R\")\n\n\n",
    "created" : 1434256186958.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1320344344",
    "id" : "1B7E93D9",
    "lastKnownWriteTime" : 1433783820,
    "path" : "~/GitHub/IALSA-2015-Portland/reports/overlap_search_graphs/2b_visualizing_overlap.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}