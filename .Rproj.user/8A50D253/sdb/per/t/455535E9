{
    "contents" : "rm(list=ls(all=TRUE))\n# library(datasets)\n# library(ggplot2) # load ggplot\n# library(GPArotation)\n# library(psych)\n# library(plotrix)\n# library(sem)\nlibrary(stats)\nlibrary(corrplot)\nlibrary(corrgram)\nlibrary(car)\nlibrary(pls)\n\n# load custom functions developed by James Steiger\nsource(\"http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt\")\n\n# Generate data for classroom examples \nN<-30\np <- 4\nvarnames<-c(\"Intelligence\"=\"IQ\",\n            \"Socio-Economic Status\"=\"SES\",\n            \"Parent Education\"=\"PEd\",\n            \"Cost of House\"=\"CoH\")\nvarmeans<-c(100, 7 , 13 , 272.9)\nvarstds<-c(13,3, 3, 70.0)\n# empty data matrix\nX<-matrix(numeric(0),N,p)\ncolnames(X)<-varnames\n# empty correlation matrix\nR<-matrix(numeric(0),p,p)\n# target correlation matrix                IQ\ncorrelations<-CompleteCorrelationMatrix(c(.25,#SES\n                                          .42,.23,#PEd\n                                          .28,.75,.35))#CoH\n\ncolnames(correlations)<-varnames\nrownames(correlations)<-varnames\n\ncovariances<-diag(varstds) %*% correlations %*% diag(varstds)\nX<-MakeExactData(varmeans,covariances,N,use.population=F)\ncolnames(X)<-varnames\nrownames(X)<-c(1:N)\nX[,'IQ'] = round(X[,'IQ'],0)\nX[,'SES'] = round(X[,'SES'],0)\nX[,'PEd'] = round(X[,'PEd'],0)\nX[,'CoH'] = round(X[,'CoH'],3)\n\nstdX<-scale(X)\nX<-data.frame(X)\nstdX<-data.frame(stdX)\n\nstdIQ<-stdX$IQ\nstdSES<-stdX$SES\nstdPEd<-stdX$PEd\nstdCoH<-stdX$CoH\nstdX<-cbind(stdIQ,stdSES,stdPEd,stdCoH)\ncolnames(stdX)<-varnames\nrownames(stdX)<-c(1:N)\nstdX<-data.frame(stdX)\n\nsummary(X) # gets basic descriptives of data\nsummary(stdX)\ncor(X)\ncor(stdX)\n\n# output the generated data into folder\nlibrary(foreign)\nwrite.foreign(X, \"MR.txt\", \"MR.sas\",   package=\"SAS\")\nwrite.foreign(stdX, \"stdMR.txt\", \"stdMR.sas\",   package=\"SAS\")\n\n# ### Modeling begings ###\n# \n# model<-glm(data=X,\n#   IQ ~ 1 + SES + PEd + CoH\n#          )\n# # library(base)\n# # model<-lm(data=X,\n# #            IQ ~ 1 + SES + PEd + CoH\n# # )\n# \n# summod<-summary(model)\n# str(summod)\n# \n# parest<-summod$coefficients   # parameter estimates \n# dfE<- model$df.residual       # Error df              from PROC GLM\n# dfT<- model$df.null           # Corrected Total df    from PROC GLM\n# dfR<-dfT-dfE                  # df Residual\n# SSE<-model$deviance           # SS Error              from PROC GLM\n# SST<-model$null.deviance      # SS Corrected Total    from PROC GLM\n# SSR<-SST-SSE                  # Sum of Squares Resisudal\n# MSE<-SSE/dfE                  # Mean Square Error\n# MSR<-SSR/dfR                  # Mean Square Residual\n# SS1<-anova(model)             # Type I SS, control\n# SS3<-Anova(model,type=\"III\")  # Type III SS, eliminate\n# # Remember that F = MSR/MSE\n# dfMT<-SS1[1] # degrees of freedom for each model term\n# dfM<-SS1[3] # degrees of freedom for each model\n# \n# TypeI.SS<-SS1[2] # Type I SS\n# TypeI.SS.cum<-SS1[4] # Type I SS cumulative\n# TypeI.MS<-TypeI.SS/dfMT # Mean Square for Type I SS\n# TypeI.F<-TypeI.MS/MSE # F-statistics for Type I analysis\n# \n# \n# TypeIII.F <-(c(NA,SS3$LR)) # F-statistics for Type III analysis\n# TypeIII.MS<-TypeIII.F*MSE # Mean Square for Type III SS\n# TypeIII.P <-c(NA,t(SS3[3])) # p-value for each term eliminating others\n# TypeIII.SS<-TypeIII.MS*dfMT # Type III SS\n# \n# results<-cbind(dfMT,dfM,TypeIII.SS,TypeIII.MS,TypeIII.F,TypeIII.P,\n#                TypeI.SS, TypeI.MS, TypeI.F)\n# colnames(results)<-c(\"dfTerm\",\"dfModel\",\"SS(III)\",\"MS(III)\",\"F(III)\",\"P(III)\",\n#                      \"SS(I)\",\"MS(I)\",\"F(I)\")\n# \n# \n# ################# documentation ######################\n# # compare models\n# fit1 <- lm(y ~ x1 + x2 + x3 + x4, data=mydata)\n# fit2 <- lm(y ~ x1 + x2)\n# anova(fit1, fit2)\n# \n# # Other useful functions \n# fit<-model\n# coefficients(fit) # model coefficients\n# confint(fit, level=0.95) # CIs for model parameters \n# fitted(fit) # predicted values\n# residuals(fit) # residuals\n# anova(fit) # anova table \n# vcov(fit) # covariance matrix for model parameters \n# influence(fit) # regression diagnostics\n\n ",
    "created" : 1443158430165.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1488802345",
    "id" : "455535E9",
    "lastKnownWriteTime" : 1443159402,
    "path" : "C:/Users/koval_000/Dropbox/Teach/Vandy/Guest.Lectures/Multiple.Regression/MR2.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "type" : "r_source"
}