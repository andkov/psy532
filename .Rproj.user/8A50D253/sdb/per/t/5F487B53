{
    "contents" : "rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.\n#####################################\n## @knitr load_sources\n\n\n\n#####################################\n## @knitr load_packages\n# library(xtable)\n# library(printr)\nlibrary(knitr)\nlibrary(scales) #For formating values in graphs\nlibrary(RColorBrewer)\n# library(reshape2) #For converting wide to long\nlibrary(grid) #For graphing\nlibrary(ggplot2) #For graphing\nlibrary(testit, quietly=TRUE) #For asserts\nlibrary(dplyr)\n\n## @knitr load_data\nds2 <- readRDS('./data/shared/ds2.rds')\nkeepvar <- c(\"model_number\",\"study_name\", \"model_type\",\"physical_construct\",\"cognitive_construct\",\"physical_measure\",\"cognitive_measure\", \"output_file\")\ndsTemp <- ds2[ , keepvar]\n\n\n## at this point we'd like to keep the span of models to linear forms (u1, b1)\ndsb <- ds2 %>% dplyr::filter(model_number %in% c(\"u1\",\"b1\")) %>%\n  dplyr::select_(\"study_name\",\"model_number\",\"subgroup\",\"model_type\",\"physical_construct\",\"cognitive_construct\",\"physical_measure\",\"cognitive_measure\", \"output_file\")\n\n\n## @knitr dummy\n\nunique(ds$study_name)\n\nnames(ds)\n\n## @knitr number_studies\ncat(paste0(\"**\",length(ds2$study_name),\"**\"))\n\n## @knitr number_studies_filtered\ncat(paste0(\"**\",length(dsb$study_name),\"**\"))\n\n\n# @knitr missing_studies\npathDir <- getwd() # establish home directory\npathStudies <- file.path(pathDir,\"studies\")\nmisslong <- list.dirs(pathStudies, recursive = F)\nmissing <- basename(misslong)\npresent <- unique(ds2$study_name)\nmiss <- missing[!(missing %in% present)]\ncat(miss)\n\n\n# make_table <- function(ds, rows, cols){\n# t <- table(ds[rows], ds[cols])\n# t[t==0] <- \".\"\n# return(t)\n# }\n#\n# make_table(dsb,\"study_name\", \"model_number\")\n#d\n\n\n\n## @knitr freq_studies\nt1<-table(ds2$study_name)\nt1[t1==0] <- \".\"\nt1\n\n\nt1a<-table(ds2$model_number, ds2$study_name)\nt1a[t1a==0] <- \".\"\nt1a\n\n############# ONLY LINEAE (dsb) MODLES BEYOND THIS POINT ##########\n\n## @knitr freq_studies_filter\nt1b<-table(dsb$study_name)\nt1b[t1b==0] <- \".\"\nt1b\n\nt1b<-table(dsb$model_number, dsb$study_name)\nt1b[t1b==0] <- \".\"\nt1b\n\n\n\n\n## @knitr dummy\n## PHYSICAL DOMAIN\n\n## @knitr freq_phys_constructs_studies\nt2a <- table(dsb$physical_construct,dsb$study_name)\nt2a[t2a==0] <- \".\"\nt2a\n\n## @knitr freq_phys_measures_studies\nt2b <- table(dsb$physical_measure,dsb$study_name)\nt2b[t2b==0] <- \".\"\nt2b\n\n## @knitr freq_phys_measures_phys_construct\nt2c <- table(dsb$physical_measure,dsb$physical_construct)\nt2c[t2c==0] <- \".\"\nt2c\n\n## @knitr freq_phys_measures_phys_construct_studies\nt2d <- table(dsb$study, dsb$physical_measure,dsb$physical_construct)\nt2d[t2d==0] <- \".\"\nftable(t2d)\n\n\n## @knitr dummy\n## COGNITIVE DOMAIN\n\n## @knitr freq_cog_constructs_studies\nt3a <- table(dsb$cognitive_construct,dsb$study_name)\nt3a[t3a==0] <- \".\"\nt3a\n\n## @knitr freq_cog_measures_studies\nt3b <- table(dsb$cognitive_measure,dsb$study_name)\nt3b[t3b==0] <- \".\"\nt3b\n\n## @knitr freq_cog_measures_cog_construct\nt3c <- table(dsb$cognitive_measure,dsb$cognitive_construct)\nt3c[t3c==0] <- \".\"\nt3c\n\n## @knitr freq_cog_measures_cog_construct_studies\nt3d <- table(dsb$study, dsb$cognitive_measure,dsb$cognitive_construct)\nt3d[t3d==0] <- \".\"\nftable(t3d)\n\n\n\n\n## @knitr CROSSING DOMAINS\n\n## @knitr freq_cog_construct_phys_construct\nt4 <- table(dsb$cognitive_construct,dsb$physical_construct)\nt4[t4==0] <- \".\"\nt4\n\n\n## @knitr freq_cog_measure_phys_measure\nt5 <- table(dsb$cognitive_measure,dsb$physical_measure)\nt5[t5==0] <- \".\"\nt5\n\n## @knitr freq_cog_measure_phys_measure_studies_allnames\nt6 <- table(dsb$study, dsb$cognitive_measure,dsb$physical_measure)\nt6[t6==0] <- \".\"\nftable(t6)\n\n\n\n\n\n## @knitr freq_cog_measure_phys_measure_studies\n  for( study in unique(dsb$study_name)){\n    ds <- dsb[dsb$study_name==study,]\n    t7 <- table( ds$cognitive_measure, ds$physical_measure)\n    t7[t7==0] <- \".\"\n\n  cat(\"\") #Force a new line\n  cat(paste0(\"### \", study))\n  cat(\"\\n\")\n  cat(paste0(\"Number of models in the **\",study,\"** study with the following combination of physical measures (columns) and cognitive measure (rows) \"))\n  cat(\"\\n\")\n  cat(\"```\")\n  cat(\"\\n\")\n    if( !is.na(t7[1])){\n    # print(ftable(t7))\n      print(t7)\n    } else {\n    cat(paste0(\"Error in file naming: specific measurement was not specified for physical construct **\", cs, \"**.*\\n\\n\"))\n    }\n    cat(\"```\")\n    cat(\"\\n\\n\")\n  }\n\n\n\n\n## @knitr freq_phys_measure\n  for( cs in unique(dsb$physical_construct)){\n    ds <- dsb[dsb$physical_construct==cs,]\n    t7 <- table( ds$physical_measure, ds$study_name) # physical_measure\n    t7[t7==0] <- \".\"\n\n  cat(\"\") #Force a new line\n  cat(paste0(\"### \", cs))\n  cat(\"\\n\")\n  cat(paste0(\"Operationalizations of the physical construct **\",cs,\"**: \"))\n  cat(\"\\n\")\n  cat(\"```\")\n  cat(\"\\n\")\n    if( !is.na(t7[1])){\n    # print(ftable(t7))\n      print(t7)\n    } else {\n    cat(paste0(\"Error in file naming: specific measurement was not specified for physical construct **\", cs, \"**.*\\n\\n\"))\n    }\n    cat(\"```\")\n    cat(\"\\n\\n\")\n  }\n\n\n## @knitr freq_cog_measure\n  for( cs in unique(dsb$cognitive_construct)){\n    ds <- dsb[dsb$cognitive_construct==cs,]\n    t7 <- table( ds$cognitive_measure, ds$study_name) # cognitive_measure\n    t7[t7==0] <- \".\"\n\n  cat(\"\") #Force a new line\n  cat(paste0(\"### \", cs))\n  cat(\"\\n\")\n  cat(paste0(\"Operationalizations of the cognitive construct **\",cs,\"**: \"))\n  cat(\"\\n\")\n  cat(\"```\")\n  cat(\"\\n\")\n    if( !is.na(t7[1])){\n    # print(ftable(t7))\n      print(t7)\n    } else {\n    cat(paste0(\"Error in file naming: specific measurement was not specified for cogntive construct **\", cs, \"**.*\\n\\n\"))\n    }\n    cat(\"```\")\n    cat(\"\\n\\n\")\n  }\n\n\n\n## @knitr dummy\n\n\n## @knitr dummy\ncogSpec <- as.data.frame(unique(dsb$cognitive_measure))\nphysSpec <- as.data.frame(unique(dsb$physical_measure))\nnames(cogSpec) <- \"name\"\nnames(physSpec) <- \"name\"\n# class(cogSpec); str(cogSpec)\n# names(cogSpec)\ndplyr::arrange(cogSpec,name)\ndplyr::arrange(physSpec, name)\n\n## @knitr prepare_pretty\n# names(dsb)\n\nds <- ds2 %>%\n  dplyr::arrange(physical_construct, cognitive_construct, physical_measure, cognitive_measure, subgroup, model_type)\n\n\n\nsource(\"./reports/basic/2a_make_pretty_small.R\")\n\n\n\n## @knitr study_tables\n\nfor( i in seq_along(present) ) {\n\n  study_name <- present[i]\n\n\n  d_bivariate_study <- ds_bivariate_pretty[ds_bivariate_pretty$study==study_name, ]\n  # d_bivariate_study <- d_bivariate_study[ , -(1:2)]\n  cat(\"\") #Force a new line\n  cat(paste0(\"## \", study_name))\n  cat(\"\\n\") #Force a new line\n\n#   for(gender in unique(d_bivariate_study$subgroup)){\n#   cat(\"\") #Force a new line\n#   cat(paste0(\"### \", gender))\n#   cat(\"\\n\") #Force a new line\n  d <- d_bivariate_study\n\n    if( nrow(d_bivariate_study) > 0L) {\n      print(knitr::kable(d[ , -(1)], caption=\"Bivariate Results\", row.names= F))\n    } else {\n      cat(\"*No bivariate models were supplied from the study.*\\n\\n\")\n    }\n    cat(\"\\n\")\n  }\n\n# }\n\n\n",
    "created" : 1444323093116.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "995102126",
    "id" : "5F487B53",
    "lastKnownWriteTime" : 1436756607,
    "path" : "~/GitHub/IALSA-2015-Portland/reports/basic/2_basic_study_report.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}