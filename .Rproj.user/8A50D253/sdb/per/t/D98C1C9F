{
    "contents" : "rm(list=ls(all=TRUE)) # To clear the memory of variables from previous runs. This is not called by knitr, because it's above the first chunk.\ncat(\"\\014\") # To clear the console\n\n## @knitr load_sources\n\n## @knitr load_packages\nlibrary(RODBC)\nlibrary(dplyr) # for data manipulation\nlibrary(ggplot2) # for graphing\nlibrary(scales) #for formating values in graphs\nlibrary(HistData)\nlibrary(testit, quietly=TRUE) #For asserts\nlibrary(markdown)\nlibrary(knitr)\nlibrary(rmarkdown)\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lattice)\nlibrary(grid)\n\n## @knitr declare_globals\n\n## @knitr load_data\npathDir <- getwd()\nfilePath <- file.path(pathDir,\"data/raw/locations.csv\")\nds <- read.csv(filePath,header=TRUE)\nhead(ds)\n\n\nls <- list(site_name=ds$Site_Name, \n           facility_name=ds$Facility_Name,\n           building_name=ds$Building_Name,\n           unit_name=ds$Unit_Name,\n           space_type=ds$Space_Type,\n           location_category=ds$Location_Category,\n           location_type=ds$Location_Type,\n           location_grouping=ds$Location_Grouping,\n           cohort_code=ds$Cohort_Code,\n           ken_class=ds$Ken_Class)\n\n# for (i in seq_along(ls[[\"site_name\"]])){\n# names(ls[[\"site_name\"]][i]) <- ls[[\"site_name\"]][i]\n# }\n\n\n## @knitr tweak_data\n\n## @knitr make_pretty\n# source(\"./reports/basic/make_pretty.R\")\n\n\n## @knitr basic_table\nfor( dimension in names(ds) ){\n  # ds <- dsb[dsb$study_name==study,]\n  # dimension <- \"Site_Name\"\n#     a <- ds[[paste(dimension)]]\n#     b <- ds[[paste(\"Space_Type\")]]\n  tb <- table(ds[[paste(dimension)]],ds[[paste(\"Space_Type\")]])\n  tb[tb==0] <- \".\"\n\ncat(\"\\n\\n\")  \ncat(\"\") #Force a new line\ncat(paste0(\"## \", dimension))\ncat(\"\\n\\n\")\ncat(\" \")\n\ncat(paste0(\"Uniqe elements in the dimension of **\",dimension,\"** by space type\"))\ncat(\"\\n\\n\")\ncat(\"```\")\ncat(\"\\n\\n\")\n  if( !is.na(tb[1])){\n  # print(ftable(tb))\n    print(tb)\n    length(unique(ds[[dimension]]))\n  } else {\n  cat(paste0(\"Error \\n\\n\"))\n  }\n  cat(\"```\")\n  cat(\"\\n\\n\")\n}\n\n\n## @knitr basic_unique\n\nsapply(ds,unique)\n\n## @knitr basic_freq\n\n## Compute length(unique(ds)) for each of the column/variables of the dataset\nCompose <- function(x, ...)\n{\n    lst <- list(...)\n    for(i in rev(seq_along(lst)))\n        x <- lst[[i]](x)\n    x\n}\n\nsapply(ds, Compose, length,unique)\n\n\n\n## @knitr basic_graph\nsource(\"./scripts/graphs/main_theme.R\")\n\n\n\nlocation_map <- function(ds){\n\n  vertical_axis <- \"Site_Name\"\n  # vertical_axis <- \"Facility_Name\"\n  \n  # horizontal_axis <- \"Ken_Class\"\n  # horizontal_axis <- \"Cohort_Code\"\n  horizontal_axis <- \"Location_Grouping\"\n  \n  fill_value <- \"Cohort_Code\"\n  # fill_value <- \"Ken_Class\"\n  \n  \n  # extra_label <- \"Ken_Class\"\n  ds$Cohort_Code <- factor(ds$Cohort_Code)\n\n  d <- ds %>%\n    dplyr::filter(Space_Type==\"Unit\") %>%\n    dplyr::count_(c(vertical_axis, horizontal_axis, fill_value)) %>%\n    # dplyr::mutate_(cohort = unique(\"Cohort_Code\"))\n    # dplyr::count_(c(vertical_axis, horizontal_axis))\n  \n  d$id <- seq_along(d$Site_Name)\n  newd <- tidyr::spread(d, Cohort_Code, id )\n  selector <- names(newd) %in% paste(c(1:12))\n  newd <- newd[selector]\n  a <- sapply(newd, unique)\n    \n  newd$cohorts <- paste0(newd$1,newd$2) \n  \n fix(newd)\n    # dplyr::count_(c(vertical_axis, horizontal_axis, fill_value, extra_label))\n \n   d$dummy <- factor(\"dummy\")\n  d$label_display <- paste0(stringr::str_sub(d[[vertical_axis]] ,1,6), \" - \" ,d$n)\n\n  # g <- ggplot2::ggplot(d, aes_string(x=fill_value, y=vertical_axis, label=\"label_display\", fill=fill_value))\n  # g <- ggplot2::ggplot(d, aes_string(x=\"dummy\", y=vertical_axis, label=\"label_display\", fill=fill_value)) \n  g <- ggplot2::ggplot(d, aes_string(x=horizontal_axis, y=vertical_axis, label=\"label_display\", fill=fill_value)) \n  g <- g + geom_tile()\n  g <- g + geom_text(size = baseSize-7, hjust=.4)\n  # g <- g + facet_grid(. ~ Location_Grouping ) # facet_grid can't pass strings yet\n    # g <- g + coord_flip() \n  g <- g + scale_y_discrete(name = vertical_axis, limits=rev(unique(d[[vertical_axis]])))\n  g <- g + scale_x_discrete(name = horizontal_axis, limits=unique(d[[horizontal_axis]]))\n  \n  g <- g + scale_fill_discrete(name = fill_value)\n  # g <- g + scale_fill_gradient(low=\"white\", high=\"salmon\", na.value = \"white\")\n  # g <- g + labs(title=horizontal_axis)\n  g <- g + main_theme\n  g <- g + theme(axis.text.y =  element_text(size=baseSize-1),\n                 # axis.text.x =  element_blank(),\n                 axis.text.x =  element_text(size=baseSize-1, angle=-90, hjust=0, vjust=0),\n                 axis.title.x = element_blank(),\n                 axis.title.y = element_text(vertical_axis),\n                 # legend.title = element_blank(),\n                 legend.text =  element_text(),\n                 legend.position=\"left\") \n  # g <- g + opts(axis.title.x=theme_text(angle=0))\n  return(g) \n  # g\n}\ng1 <- location_map(ds)\ng1\n## @knitr dummy\n\n# rmarkdown::render(\"./reports/basic/basic.Rmd\", output_format=c(\"html_document\"), clean=TRUE)\n\n\n",
    "created" : 1443110546528.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2191574391",
    "id" : "D98C1C9F",
    "lastKnownWriteTime" : 1443078737,
    "path" : "~/GitHub/VIHA-programs/reports/basic/basic.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}