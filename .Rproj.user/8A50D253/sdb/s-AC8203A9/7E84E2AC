{
    "contents" : "rm(list=ls())\n\n# enter the data from Maxwell & DeLaney (2004), table 3.3 on page 91\n# outcome = global affect rating, higher = better mood\n# groups : pleasant, neutral, and unpleasant\n\n# load libraries we'll need for the project\nlibrary(dplyr)\n\n\n\n# create three vectors each containing a set of scores from each\npleasant <- c(6,5,4,7,7,5,5,7,7,7)\nneutral <- c(5,4,4,3,4,3,4,4,4,5)\nunpleasant <- c(3,3,4,4,4,3,1,2,2,4)\n\n#combine three vectors into a dataframe object named \"ds\"\nds <- cbind(pleasant, neutral, unpleasant)\nds <- as.data.frame(cbind(pleasant, neutral, unpleasant))\nds\n\n#produce summary of variables with summary function from base package\n(a <- summary(ds))\nstr(a)\n\n#summarize variables with describe function from the psych package\n(a <- psych::describe(ds))\nstr(a)\nt(psych::describe(ds))\n\n\n#compute the mean of each variable with dplyr\n(a <- dplyr::summarise_each(ds, funs(mean)))\nstr(a)\na[\"pleasant\"]\n\n#create a list containing means using lapply\n(M <- lapply(ds, mean))\nstr(M)\nstr(M[\"pleasant\"])\nstr(M[[\"pleasant\"]])\nstr(M[\"pleasant\"][[1]])\nas.numeric(M)\n\n#create a list containing standard deviations using lapply\n(SD <- lapply(ds, sd))\nstr(SD)\nas.numeric(SD)\n\n#################################################\n\n# compute errors of pleasant group\n(ds_pleasant <- as.data.frame(pleasant))\n(ds_pleasant <- dplyr::rename(ds_pleasant, y = pleasant))\n(ds_pleasant$error <- ds_pleasant$y - M[\"pleasant\"][[1]])\n(ds_pleasant$error2 <- ds_pleasant$error^2)\nds_pleasant\n\n\n# compute errors of pleasant group\n(ds_neutral <- as.data.frame(neutral))\n(ds_neutral <- dplyr::rename(ds_neutral, y = neutral))\n(ds_neutral$error <- ds_neutral$y - mean(ds_neutral$y))\n(ds_neutral$error2 <- ds_neutral$error^2) \nds_neutral \n\ny3 <- ds$unpleasant\ne3 <- y3-mean(y3)\nes3 <- e3^2\n(ds_unpleasant <- as.data.frame(cbind(y3, e3, es3)))\n\ny1 <- ds$pleasant\ne1 <- y1-mean(y1)\nes1 <- e1^2\n(ds_pleasant <- as.data.frame(cbind(y1, e1, es1)))\n\ny2 <- ds$neutral\ne2 <- y2-mean(y2)\nes2 <- e2^2\n(ds_neutral <- as.data.frame(cbind(y2, e2, es2)))\n\n\n# # write a function that computes error four our file\n# compute_errors <- function(ds=ds, group=\"pleasant\"){\n#   df <- as.data.frame(ds[group])\n#   names(df) <- \"y\"\n#   df$error <- df$y - mean(df$y) \n#   df$error2 <- df$error^2\n#   return(df)\n# }\n# ds_pleasant <- compute_errors(ds=ds, group=\"pleasant\")\n# ds_neutral <- compute_errors(ds=ds, group=\"neutral\")\n# ds_unpleasant <- compute_errors(ds=ds, group=\"unpleasant\")\n\ntable_3_4 <- cbind(ds_pleasant, ds_neutral, ds_unpleasant)\ntable_3_4\n\n###################################################\nds\ndsL <- tidyr::gather(ds, \"group\") #cheatsheet\ndsL\nhead(dsL, 22)\n\n\ndsL <- reshape2::melt(ds)\ndsL <- dplyr::rename(dsL, group = variable)\ndsL <- dplyr::rename(dsL, y = value )\nstr(dsL)\nhead(dsL, 22)\n\ndsL$d1 <- ifelse(dsL$group==\"pleasant\", 1, 0)\ndsL$d2 <- ifelse(dsL$group==\"neutral\", 1, 0)\ndsL$d3 <- ifelse(dsL$group==\"unpleasant\", 1, 0)\nhead(dsL, 22)\n\n\ndsL$m1 <- (sum(dsL$y * dsL$d1)/(sum(dsL$d1)))*dsL$d1\ndsL$m2 <- (sum(dsL$y * dsL$d2)/(sum(dsL$d2)))*dsL$d2\ndsL$m3 <- (sum(dsL$y * dsL$d3)/(sum(dsL$d3)))*dsL$d3\nhead(dsL, 22)\n\ndsL$ybar <- dsL$m1 + dsL$m2 + dsL$m3\nhead(dsL, 22)\n\ndsL <- dsL[c(\"y\", \"group\",\"d1\",\"d2\",\"d3\",\"ybar\")]\n\ndsL$ydot <- round(mean(dsL$y),2)\nhead(dsL, 22)\n\n################################\nm1 <- lm(y ~  group, data=dsL)\nsummary(m1)\n \n# m2 <- glm(y ~ + group, data=dsL)\n# summary(m2)\n\ndsL$yhat <- predict(m1)\n# dsL$yhat2 <- predict(m2)\ndsL\n###################################\n\n## @knitr eq65\nSSw <- sum((dsL$y - dsL$ybar)^2) # SS Between\nEf <- SSw # Full model\n\n## \nSSt <- sum((dsL$y - dsL$ydot)^2) # SS Within\nEr <- SSt # Restricted model\n\n##\nSSb <- sum((dsL$ydot - dsL$ybar)^2)\ndelta_E <- Er - Ef\nall.equal(SSb,delta_E)\n\n##\nN <- nrow(dsL) # length(dsL$y)\na <- length(levels(dsL$group))\n\ndfR <- N - 1\ndfF <- N - a\n\ndelta_df <- dfR - dfF\n\n##\nMSE <-  delta_E/delta_df\nMSR <- Ef/dfF\n\nFtest <- MSE/MSR\nFtest\n\n\n\n",
    "created" : 1441050521396.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "549091959",
    "id" : "7E84E2AC",
    "lastKnownWriteTime" : 1441122010,
    "path" : "~/GitHub/psy532/materials/cases/mood_induction/one_way_designs.R",
    "project_path" : "materials/cases/mood_induction/one_way_designs.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}