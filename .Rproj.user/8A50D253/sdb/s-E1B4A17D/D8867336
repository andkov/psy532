{
    "contents" : "rm(list=ls())\n\n# enter the data from Maxwell & DeLaney (2004), table 3.3 on page 91\n# outcome = global affect rating, higher = better mood\n# groups : pleasant, neutral, and unpleasant\n\n# load libraries we'll need for the project\nlibrary(dplyr)\n\n\n\n# create three vectors each containing a set of scores from each\npleasant <- c(6,5,4,7,7,5,5,7,7,7)\nneutral <- c(5,4,4,3,4,3,4,4,4,5)\nunpleasant <- c(3,3,4,4,4,3,1,2,2,4)\n\n#combine three vectors into a dataframe object named \"ds\"\nds <- cbind(pleasant, neutral, unpleasant)\nds <- as.data.frame(cbind(pleasant, neutral, unpleasant))\nds\n\n#produce summary of variables with summary function from base package\n(a <- summary(ds))\nstr(a)\n\n#summarize variables with describe function from the psych package\n(a <- psych::describe(ds))\nstr(a)\nt(psych::describe(ds))\n\n\n#compute the mean of each variable with dplyr\n(a <- dplyr::summarise_each(ds, funs(mean)))\nstr(a)\na[\"pleasant\"]\n\n\n#create a list containing  group means using lapply\n(group_mean <- lapply(ds, mean))\nstr(group_mean)\nstr(group_mean[\"pleasant\"])\nstr(group_mean[[\"pleasant\"]])\nstr(group_mean[\"pleasant\"][[1]])\nas.numeric(group_mean)\n\n#create a list containing standard deviations using lapply\n(SD <- lapply(ds, sd))\nstr(SD)\nas.numeric(SD)\n\n# compute grand mean\n(grand_mean <- mean(c(ds$pleasant, ds$neutral, ds$unpleasant)))\n\n#################################################\n\n\n# compute error of each group \n\ny1 <- ds$pleasant\ne1 <- y1-mean(y1)\nes1 <- e1^2\n(ds_pleasant <- as.data.frame(cbind(y1, e1, es1)))\n\ny2 <- ds$neutral\ne2 <- y2-mean(y2)\nes2 <- e2^2\n(ds_neutral <- as.data.frame(cbind(y2, e2, es2)))\n\ny3 <- ds$unpleasant\ne3 <- y3-mean(y3)\nes3 <- e3^2\n(ds_unpleasant <- as.data.frame(cbind(y3, e3, es3)))\n\n# recreate the table 3.4 on the page 92 (Maxwell & Delaney, 2004)\ntable_3_4 <- cbind(ds_pleasant, ds_neutral, ds_unpleasant)\ntable_3_4\nd <- table_3_4\n\n# compute misfit of the FULL model\n(EF <- sum(es1 + es2 + es3))\n# compute misfit of the REDUCED model\n(ER <- sum( (y1-grand_mean)^2 + (y2-grand_mean)^2 + (y3-grand_mean)^2))\n# count the degrees of freedom of the FULL model\ndfF <- 27\n# count the degrees of freedom of the REDUCED model\ndfR <- 29\n\n# load areaF function\nsource(\"https://raw.githubusercontent.com/andkov/psy532/master/scripts/graphs/areaF_graphing.R\")\nareaF(EF, dfF, ER, dfR )\n\n#   \n###################################################\n# convert from wide to long \nds\ndsL <- tidyr::gather(ds, \"group\") #cheatsheet\ndsL\nhead(dsL, 22)\n\n# convert from wide to long (alternative)\ndsL <- reshape2::melt(ds)\ndsL <- dplyr::rename(dsL, group = variable)\ndsL <- dplyr::rename(dsL, y = value )\nstr(dsL)\nhead(dsL, 22)\n\n# create dummy variable\ndsL$d1 <- ifelse(dsL$group==\"pleasant\", 1, 0)\ndsL$d2 <- ifelse(dsL$group==\"neutral\", 1, 0)\ndsL$d3 <- ifelse(dsL$group==\"unpleasant\", 1, 0)\nhead(dsL, 22)\n\n# create dummy column with group means\ndsL$m1 <- (sum(dsL$y * dsL$d1)/(sum(dsL$d1)))*dsL$d1\ndsL$m2 <- (sum(dsL$y * dsL$d2)/(sum(dsL$d2)))*dsL$d2\ndsL$m3 <- (sum(dsL$y * dsL$d3)/(sum(dsL$d3)))*dsL$d3\nhead(dsL, 22)\n\n# create a column with group means\ndsL$group_mean <- dsL$m1 + dsL$m2 + dsL$m3\nhead(dsL, 22)\n\n# keep only specific variables\ndsL <- dsL[c(\"y\", \"group\",\"d1\",\"d2\",\"d3\",\"group_mean\")]\n\n# create a variable with grand/total mean\ndsL$grand_mean <- round(mean(dsL$y),2)\nhead(dsL, 22)\n\n################################\nm1 <- lm(y ~  group, data=dsL)\nsummary(m1)\n \nm2 <- glm(y ~ 1 + group, data=dsL)\nsummary(m2)\n\ndsL$yhat <- predict(m1)\ndsL$yhat2 <- predict(m2)\ndsL\n###################################\n\n## @knitr eq65\nSSw <- sum((dsL$y - dsL$group_mean)^2) # SS Between\nEF <- SSw # Full model\n\n## \nSSt <- sum((dsL$y - dsL$grand_mean)^2) # SS Within\nER <- SSt # Restricted model\n\n##\nSSb <- sum((dsL$grand_mean - dsL$group_mean)^2)\ndelta_E <- ER - EF\nall.equal(SSb,delta_E)\n\n# load areaF function\nsource(\"https://raw.githubusercontent.com/andkov/psy532/master/scripts/graphs/areaF_graphing.R\")\nareaF(SSw, dfF, SSt, dfR )\n\n\n## Manual computation of the F statistic\nN <- nrow(dsL) # length(dsL$y)\na <- length(levels(dsL$group))\n\ndfR <- N - 1\ndfF <- N - a\n\ndelta_df <- dfR - dfF\n\n##\nMSE <-  delta_E/delta_df\nMSR <- EF/dfF\n\nFtest <- MSE/MSR\nFtest\n\nmdl <- glm(y ~ + group, data=dsL)\n\n(dfF <- mdl$df.residual)              # FULL            ( df ERROR)    \n(dfR <- mdl$df.null)                  # RESTRICTED      ( df TOTAL)    \n\n# misfit of the models\n(SSE <- mdl$deviance);EF <- SSE       # FULL            (SS Error) - (EF)\n(SST <- mdl$null.deviance); ER <- SST # RESTRICTED      (SS Total) - (ER)\n\nsource(\"https://raw.githubusercontent.com/andkov/psy532/master/scripts/graphs/areaF_graphing.R\")\nareaF(6136, 26, 6525, 29 )\nareaF(26, 27, 72.66667, 29)\nareaF(100, 10, 200, 11, 20)\n\n\n",
    "created" : 1443387954137.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4050102369",
    "id" : "D8867336",
    "lastKnownWriteTime" : 1443713562,
    "path" : "~/GitHub/psy532/materials/cases/MD_3_mood/one_way_designs.R",
    "project_path" : "materials/cases/MD_3_mood/one_way_designs.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}