ds <- datasets::women
head(ds)
View(ds)
pairs(ds)
class(ds)
str(ds)
D <- diag(1,1)
D
D <- diag(c(1,1)
)
D
ds <- datasets::women
class(ds)
str(ds)
head(ds)
plot(ds)
table(ds)
hist(ds)
hist(ds$height)
hist(ds$weight)
plot(ds)
head(ds)
ds$metric_height <- ds$height * 2.54
pairs(ds)
head(ds)
ds$metric_weight <- ds$weight * .454
head(ds)
(M <- mean(ds$height))
ds$height - M
ds$height
ds$height - M
ds$height_z <- (ds$height - mean(ds$height))/sd(ds$height)
ds
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/women.html
ds <- datasets::women
class(ds)
str(ds)
head(ds)
## @knitr in_to_cm
ds$height_m <- ds$height * 2.54
## @knitr lbs_to_kg
ds$weight_m <- ds$weight * .454
## @knitr into_z
ds$height_z <- (ds$height - mean(ds$height))/sd(ds$height)
ds
ds$weight_z <- (ds$weight - mean(ds$weight))/sd(ds$weight)
ds
cat("\f")
rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
## @knitr load_sources
## @knitr load_packages
library(dplyr) # for data manipulation
library(ggplot2) # for graphing
library(scales) #for formating values in graphs
library(HistData)
library(testit, quietly=TRUE) #For asserts
library(ISLR)
## @knitr declare_globals
## @knitr load_data
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/women.html
ds <- datasets::women
class(ds)
## @knitr inspect_ds
str(ds)
ds
## @knitr in_to_cm
ds$height_m <- ds$height * 2.54
## @knitr lbs_to_kg
ds$weight_m <- ds$weight * .454
str(ds)
ds
head(ds, 15)
ds$w_s <- scale(ds$weight, center = TRUE, scale = TRUE)
ds
ds$weight_z <- (ds$weight - mean(ds$weight))/sd(ds$weight)
ds
?scale
ds$h_s <- base::scale(ds$height, center = TRUE, scale = TRUE)
ds$w_s <- base:scale(ds$weight, center = TRUE, scale = TRUE)
ds$w_s <- base::scale(ds$weight, center = TRUE, scale = TRUE)
## @knitr in_to_cm
ds$h_m <- ds$height * 2.54
## @knitr lbs_to_kg
ds$w_m <- ds$weight * .454
## @knitr into_z
ds$h_z <- (ds$height - mean(ds$height))/sd(ds$height)
ds$w_z <- (ds$weight - mean(ds$weight))/sd(ds$weight)
## @knitr scale_function
ds$h_s <- base::scale(ds$height, center = TRUE, scale = TRUE)
ds$w_s <- base::scale(ds$weight, center = TRUE, scale = TRUE)
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/women.html
ds <- datasets::women
class(ds)
## @knitr inspect_ds
str(ds)
head(ds, 15)
## @knitr in_to_cm
ds$h_m <- ds$height * 2.54
## @knitr lbs_to_kg
ds$w_m <- ds$weight * .454
## @knitr into_z
ds$h_z <- (ds$height - mean(ds$height))/sd(ds$height)
ds$w_z <- (ds$weight - mean(ds$weight))/sd(ds$weight)
## @knitr scale_function
ds$h_s <- base::scale(ds$height, center = TRUE, scale = TRUE)
ds$w_s <- base::scale(ds$weight, center = TRUE, scale = TRUE)
head(ds, 15)
ds <- ds[-c("h_z","w_s")]
ds <- ds[!(names(ds) %in% c("h_s","w_s")]
ds <- ds[!(names(ds) %in% c("h_s","w_s"))]
ds
options(digits = 4)
cat("\f")
rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
options(digits = 4)
## @knitr load_sources
## @knitr load_packages
library(dplyr) # for data manipulation
library(ggplot2) # for graphing
library(scales) #for formating values in graphs
library(HistData)
library(testit, quietly=TRUE) #For asserts
library(ISLR)
## @knitr declare_globals
## @knitr load_data
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/women.html
ds <- datasets::women
class(ds)
## @knitr inspect_ds
str(ds)
head(ds, 15)
## @knitr in_to_cm
ds$h_m <- ds$height * 2.54
## @knitr lbs_to_kg
ds$w_m <- ds$weight * .454
## @knitr into_z
ds$h_z <- (ds$height - mean(ds$height))/sd(ds$height)
ds$w_z <- (ds$weight - mean(ds$weight))/sd(ds$weight)
## @knitr scale_function
ds$h_s <- base::scale(ds$height, center = TRUE, scale = TRUE)
ds$w_s <- base::scale(ds$weight, center = TRUE, scale = TRUE)
## @knitr remove_column_from_ds
drop <- c("h_s","w_s")
ds <- ds[!(names(ds) %in% drop)]
ds
cat("\f")
rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
options(digits = 3)
## @knitr load_sources
## @knitr load_packages
library(dplyr) # for data manipulation
library(ggplot2) # for graphing
library(scales) #for formating values in graphs
library(HistData)
library(testit, quietly=TRUE) #For asserts
library(ISLR)
## @knitr declare_globals
## @knitr load_data
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/women.html
ds <- datasets::women
class(ds)
## @knitr inspect_ds
str(ds)
head(ds, 15)
## @knitr in_to_cm
ds$h_m <- ds$height * 2.54
## @knitr lbs_to_kg
ds$w_m <- ds$weight * .454
## @knitr into_z
ds$h_z <- (ds$height - mean(ds$height))/sd(ds$height)
ds$w_z <- (ds$weight - mean(ds$weight))/sd(ds$weight)
## @knitr scale_function
ds$h_s <- base::scale(ds$height, center = TRUE, scale = TRUE)
ds$w_s <- base::scale(ds$weight, center = TRUE, scale = TRUE)
## @knitr remove_column_from_ds
drop <- c("h_s","w_s")
ds <- ds[!(names(ds) %in% drop)]
ds
# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/women.html
ds <- datasets::women
## @knitr inspect_ds
str(ds)
head(ds, 15)
Mh <- mean(ds$height)
Mw <- mean(ds$wegiht)
Mw <- mean(ds$weight)
Mh
Mw
ds
Mh; Mw
ds$Mh <- Mh
ds
ds$dev_h <- ds$Mh - ds$height
ds
ds$sdev_h <- ds$dev_h / sd(ds$height)
ds
SDh <- sd(ds$height)
SDw <- sd(ds$weight)
SDh; SDw
ds$SDh <- SDh
ds
ds$dev_h <- ds$Mh - ds$height
ds$sdev_h <- ds$dev_h / sd(ds$height)
ds
ds <- datasets::women
Mh <- mean(ds$height)
Mw <- mean(ds$weight)
Mh; Mw
## @knitr
SDh <- sd(ds$height)
SDw <- sd(ds$weight)
SDh; SDw
ds$Mh <- Mh
ds$SDh <- SDh
ds
ds$dev_h <- ds$Mh - ds$height
ds
ds$sd_h <- ds$dev_h / ds$SDh
ds
mean(ds_h)
mean(ds$sd_h)
sd(ds$sd_h)
ds <- datasets::women
ds <- ds[-1]
ds
ds <- datasets::women
ds <- ds[-2]
ds$mean <- Mh
ds
ds$SD <- SDh
ds
ds$deviation <- ds$mean - ds$height
ds$z <- ds$deviation / ds$SD
ds
ds$mean <-mean(ds$height)
ds$SD <- sd(ds$height)
ds$deviation <- ds$mean - ds$height
ds$z <- ds$deviation / ds$SD
ds
m1 <- lm(height ~ 1, ds)
m1
ds$m1 <- predict(m1)
ds
m1a <- lm(z ~ 1, ds)
ds$m1a <- predict(m1a)
ds
library(swirl)
swirl()
install_from_swirl("Statistical_Inference")
library(swirl)
install_from_swirl("Statistical_Inference")
install_from_swirl("Regression_Models")
install_from_swirl("Mathematical_Biostatistics_Boot_Camp")
install_from_swirl("Data_Analysis")
install_from_swirl("Exploratory_Data_Analysis")
install_from_swirl("Overview_of_Statistics")
install_from_swirl("Writing_swirl_Courses")
library(swirl)
swirl()
install.packages("swirl")
install.packages("swirl")
install_from_swirl("Getting_and_Cleaning_Data")
library(swirl)
install_from_swirl("Data_Analysis")
install_from_swirl("Getting_and_Cleaning_Data")
install_from_swirl("Writing_swirl_Courses")
swirl()
library(swirl)
install_from_swirl("Exploratory_Data_Analysis")
install_from_swirl("Getting_and_Cleaning_Data")
install_from_swirl("Mathematical_Biostatistics_Boot_Camp")
install_from_swirl("Overview_of_Statistics")
install_from_swirl("R_Programming")
install_from_swirl("Regression_Models")
install_from_swirl("Statistical_Inference")
install_from_swirl("Writing_swirl_Courses")
swirl()
swirl()
uninstall_course("Overview_of_Statistics")
swirl()
library(swirlify)
library(swirl)
