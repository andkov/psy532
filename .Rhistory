TypeI.SS.cum<-SS1[4] # Type I SS cumulative
TypeI.MS<-TypeI.SS/dfMT # Mean Square for Type I SS
TypeI.F<-TypeI.MS/MSE # F-statistics for Type I analysis
TypeIII.F <-(c(NA,SS3$LR)) # F-statistics for Type III analysis
TypeIII.MS<-TypeIII.F*MSE # Mean Square for Type III SS
TypeIII.P <-c(NA,t(SS3[3])) # p-value for each term eliminating others
TypeIII.SS<-TypeIII.MS*dfMT # Type III SS
results<-cbind(dfMT,dfM,TypeIII.SS,TypeIII.MS,TypeIII.F,TypeIII.P,
TypeI.SS, TypeI.MS, TypeI.F)
colnames(results)<-c("dfTerm","dfModel","SS(III)","MS(III)","F(III)","P(III)",
"SS(I)","MS(I)","F(I)")
################# documentation ######################
# compare models
fit1 <- lm(y ~ x1 + x2 + x3 + x4, data=mydata)
fit2 <- lm(y ~ x1 + x2)
anova(fit1, fit2)
# Other useful functions
fit<-model
coefficients(fit) # model coefficients
confint(fit, level=0.95) # CIs for model parameters
fitted(fit) # predicted values
residuals(fit) # residuals
anova(fit) # anova table
vcov(fit) # covariance matrix for model parameters
influence(fit) # regression diagnostics
rm(list=ls(all=TRUE))
# library(datasets)
# library(ggplot2) # load ggplot
# library(GPArotation)
# library(psych)
# library(plotrix)
# library(sem)
# library(stats)
# library(corrplot)
# library(corrgram)
library(car)
# load custom functions
source("Steiger R Library Functions.R")
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Generate data for classroom examples
N<-30
p <- 4
varnames<-c("Intelligence"="IQ",
"Socio-Economic Status"="SES",
"Parent Education"="PEd",
"Cost of House"="CoH")
varmeans<-c(100, 7 , 15 , 272.9)
varstds<-c(15,3, 3, 70.0)
# empty data matrix
X<-matrix(numeric(0),N,p)
colnames(X)<-varnames
# empty correlation matrix
R<-matrix(numeric(0),p,p)
# target correlation matrix                IQ
correlations<-CompleteCorrelationMatrix(c(.20,#SES
.13,.10,#PEd
.12,.10,.15))#CoH
colnames(correlations)<-varnames
rownames(correlations)<-varnames
covariances<-diag(varstds) %*% correlations %*% diag(varstds)
X<-MakeExactData(varmeans,covariances,N)
colnames(X)<-varnames
rownames(X)<-c(1:N)
X<-data.frame(X)
summary(X) # gets basic descriptives of data
cor(X)
rm(list=ls(all=TRUE))
# library(datasets)
# library(ggplot2) # load ggplot
# library(GPArotation)
# library(psych)
# library(plotrix)
# library(sem)
library(stats)
library(corrplot)
library(corrgram)
library(car)
library(pls)
# load custom functions developed by James Steiger
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Generate data for classroom examples
N<-30
p <- 4
varnames<-c("Intelligence"="IQ",
"Socio-Economic Status"="SES",
"Parent Education"="PEd",
"Cost of House"="CoH")
varmeans<-c(100, 7 , 13 , 272.9)
varstds<-c(13,3, 3, 70.0)
# empty data matrix
X<-matrix(numeric(0),N,p)
colnames(X)<-varnames
# empty correlation matrix
R<-matrix(numeric(0),p,p)
# target correlation matrix                IQ
correlations<-CompleteCorrelationMatrix(c(.25,#SES
.42,.23,#PEd
.28,.75,.35))#CoH
colnames(correlations)<-varnames
rownames(correlations)<-varnames
covariances<-diag(varstds) %*% correlations %*% diag(varstds)
X<-MakeExactData(varmeans,covariances,N,use.population=F)
colnames(X)<-varnames
rownames(X)<-c(1:N)
X[,'IQ'] = round(X[,'IQ'],0)
X[,'SES'] = round(X[,'SES'],0)
X[,'PEd'] = round(X[,'PEd'],0)
X[,'CoH'] = round(X[,'CoH'],3)
X<-data.frame(X)
stdX<-stdize(X)
rm(list=ls(all=TRUE))
# library(datasets)
# library(ggplot2) # load ggplot
# library(GPArotation)
# library(psych)
# library(plotrix)
# library(sem)
library(stats)
library(corrplot)
library(corrgram)
library(car)
library(pls)
# load custom functions developed by James Steiger
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Generate data for classroom examples
N<-30
p <- 4
varnames<-c("Intelligence"="IQ",
"Socio-Economic Status"="SES",
"Parent Education"="PEd",
"Cost of House"="CoH")
varmeans<-c(100, 7 , 13 , 272.9)
varstds<-c(13,3, 3, 70.0)
# empty data matrix
X<-matrix(numeric(0),N,p)
colnames(X)<-varnames
# empty correlation matrix
R<-matrix(numeric(0),p,p)
# target correlation matrix                IQ
correlations<-CompleteCorrelationMatrix(c(.25,#SES
.42,.23,#PEd
.28,.75,.35))#CoH
colnames(correlations)<-varnames
rownames(correlations)<-varnames
covariances<-diag(varstds) %*% correlations %*% diag(varstds)
X<-MakeExactData(varmeans,covariances,N,use.population=F)
colnames(X)<-varnames
rownames(X)<-c(1:N)
X[,'IQ'] = round(X[,'IQ'],0)
X[,'SES'] = round(X[,'SES'],0)
X[,'PEd'] = round(X[,'PEd'],0)
X[,'CoH'] = round(X[,'CoH'],3)
str(X)
class(X)
stdX<-scale(X)
rm(list=ls(all=TRUE))
# library(datasets)
# library(ggplot2) # load ggplot
# library(GPArotation)
# library(psych)
# library(plotrix)
# library(sem)
library(stats)
library(corrplot)
library(corrgram)
library(car)
library(pls)
# load custom functions developed by James Steiger
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Generate data for classroom examples
N<-30
p <- 4
varnames<-c("Intelligence"="IQ",
"Socio-Economic Status"="SES",
"Parent Education"="PEd",
"Cost of House"="CoH")
varmeans<-c(100, 7 , 13 , 272.9)
varstds<-c(13,3, 3, 70.0)
# empty data matrix
X<-matrix(numeric(0),N,p)
colnames(X)<-varnames
# empty correlation matrix
R<-matrix(numeric(0),p,p)
# target correlation matrix                IQ
correlations<-CompleteCorrelationMatrix(c(.25,#SES
.42,.23,#PEd
.28,.75,.35))#CoH
colnames(correlations)<-varnames
rownames(correlations)<-varnames
covariances<-diag(varstds) %*% correlations %*% diag(varstds)
X<-MakeExactData(varmeans,covariances,N,use.population=F)
colnames(X)<-varnames
rownames(X)<-c(1:N)
X[,'IQ'] = round(X[,'IQ'],0)
X[,'SES'] = round(X[,'SES'],0)
X[,'PEd'] = round(X[,'PEd'],0)
X[,'CoH'] = round(X[,'CoH'],3)
X<-data.frame(X)
stdX<-scale(X)
stdX
stdIQ<-stdX$IQ
rm(list=ls(all=TRUE))
# library(datasets)
# library(ggplot2) # load ggplot
# library(GPArotation)
# library(psych)
# library(plotrix)
# library(sem)
library(stats)
library(corrplot)
library(corrgram)
library(car)
library(pls)
# load custom functions developed by James Steiger
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Generate data for classroom examples
N<-30
p <- 4
varnames<-c("Intelligence"="IQ",
"Socio-Economic Status"="SES",
"Parent Education"="PEd",
"Cost of House"="CoH")
varmeans<-c(100, 7 , 13 , 272.9)
varstds<-c(13,3, 3, 70.0)
# empty data matrix
X<-matrix(numeric(0),N,p)
colnames(X)<-varnames
# empty correlation matrix
R<-matrix(numeric(0),p,p)
# target correlation matrix                IQ
correlations<-CompleteCorrelationMatrix(c(.25,#SES
.42,.23,#PEd
.28,.75,.35))#CoH
colnames(correlations)<-varnames
rownames(correlations)<-varnames
covariances<-diag(varstds) %*% correlations %*% diag(varstds)
X<-MakeExactData(varmeans,covariances,N,use.population=F)
colnames(X)<-varnames
rownames(X)<-c(1:N)
X[,'IQ'] = round(X[,'IQ'],0)
X[,'SES'] = round(X[,'SES'],0)
X[,'PEd'] = round(X[,'PEd'],0)
X[,'CoH'] = round(X[,'CoH'],3)
stdX<-scale(X)
X<-data.frame(X)
X
stdX<-scale(X)
rm(list=ls(all=TRUE))
# library(datasets)
# library(ggplot2) # load ggplot
# library(GPArotation)
# library(psych)
# library(plotrix)
# library(sem)
library(stats)
library(corrplot)
library(corrgram)
library(car)
library(pls)
# load custom functions developed by James Steiger
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Generate data for classroom examples
N<-30
p <- 4
varnames<-c("Intelligence"="IQ",
"Socio-Economic Status"="SES",
"Parent Education"="PEd",
"Cost of House"="CoH")
varmeans<-c(100, 7 , 13 , 272.9)
varstds<-c(13,3, 3, 70.0)
# empty data matrix
X<-matrix(numeric(0),N,p)
colnames(X)<-varnames
# empty correlation matrix
R<-matrix(numeric(0),p,p)
# target correlation matrix                IQ
correlations<-CompleteCorrelationMatrix(c(.25,#SES
.42,.23,#PEd
.28,.75,.35))#CoH
colnames(correlations)<-varnames
rownames(correlations)<-varnames
covariances<-diag(varstds) %*% correlations %*% diag(varstds)
X<-MakeExactData(varmeans,covariances,N,use.population=F)
colnames(X)<-varnames
rownames(X)<-c(1:N)
X[,'IQ'] = round(X[,'IQ'],0)
X[,'SES'] = round(X[,'SES'],0)
X[,'PEd'] = round(X[,'PEd'],0)
X[,'CoH'] = round(X[,'CoH'],3)
stdX<-scale(X)
rm(list=ls(all=TRUE))
# library(datasets)
# library(ggplot2) # load ggplot
# library(GPArotation)
# library(psych)
# library(plotrix)
# library(sem)
library(stats)
library(corrplot)
library(corrgram)
library(car)
library(pls)
# load custom functions developed by James Steiger
source("http://statpower.net/Content/312/R%20Stuff/Steiger%20R%20Library%20Functions.txt")
# Generate data for classroom examples
N<-30
p <- 4
varnames<-c("Intelligence"="IQ",
"Socio-Economic Status"="SES",
"Parent Education"="PEd",
"Cost of House"="CoH")
varmeans<-c(100, 7 , 13 , 272.9)
varstds<-c(13,3, 3, 70.0)
# empty data matrix
X<-matrix(numeric(0),N,p)
colnames(X)<-varnames
# empty correlation matrix
R<-matrix(numeric(0),p,p)
# target correlation matrix                IQ
correlations<-CompleteCorrelationMatrix(c(.25,#SES
.42,.23,#PEd
.28,.75,.35))#CoH
colnames(correlations)<-varnames
rownames(correlations)<-varnames
covariances<-diag(varstds) %*% correlations %*% diag(varstds)
X<-MakeExactData(varmeans,covariances,N,use.population=F)
colnames(X)<-varnames
rownames(X)<-c(1:N)
X[,'IQ'] = round(X[,'IQ'],0)
X[,'SES'] = round(X[,'SES'],0)
X[,'PEd'] = round(X[,'PEd'],0)
X[,'CoH'] = round(X[,'CoH'],3)
stdX<-scale(X)
stdX
stdX<-data.frame(stdX)
View(stdX)
stdX
X
X<-data.frame(X)
stdIQ<-stdX$IQ
stdSES<-stdX$SES
stdPEd<-stdX$PEd
stdCoH<-stdX$CoH
stdX<-cbind(stdIQ,stdSES,stdPEd,stdCoH)
colnames(stdX)<-varnames
rownames(stdX)<-c(1:N)
stdX<-data.frame(stdX)
summary(X) # gets basic descriptives of data
summary(stdX)
cor(X)
cor(stdX)
ds <- HistData::Galton
rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
cat("\014")
## @knitr load_sources
## @knitr load_packages
library(dplyr) # for data manipulation
library(ggplot2) # for graphing
library(scales) #for formating values in graphs
library(HistData)
library(testit, quietly=TRUE) #For asserts
## @knitr declare_globals
## @knitr load_data
ds <- HistData::Galton
## @knitr tweak_data
pairs(ds)
head(ds)
nrow(ds)
?HistData::Galton
ds$parent_cm <- ds$parent * 2.54
ds$child_cm <- ds$parent * 2.54
head(ds)
library(extrafont)
rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
cat("\014")
## @knitr load_sources
## @knitr load_packages
library(dplyr) # for data manipulation
library(ggplot2) # for graphing
library(scales) #for formating values in graphs
library(HistData)
library(testit, quietly=TRUE) #For asserts
library(extrafont)
source("https://raw.githubusercontent.com/andkov/psy532/master/scripts/graphs/main_theme.R")
## @knitr declare_globals
## @knitr load_data
# load Galton's data. read more:
ds <- HistData::Galton
head(ds)
nrow(ds)
??
## @knitr tweak_data
ds$parent_cm <- ds$parent * 2.54
ds$child_cm <- ds$parent * 2.54
ds$parent_cm <- ds$parent * c(2.54)
ds$child_cm <- ds$chile * 2.54
ds$child_cm <- ds$chile * c(2.54)
ds$child_cm <- ds$child * c(2.54)
ds$child_cm <- ds$child * 2.54
ds$parent_cm <- ds$parent * 2.54
ds$child_cm <- ds$child * 2.54
rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
cat("\014")
## @knitr load_sources
## @knitr load_packages
library(dplyr) # for data manipulation
library(ggplot2) # for graphing
library(scales) #for formating values in graphs
library(HistData)
library(testit, quietly=TRUE) #For asserts
library(extrafont)
source("https://raw.githubusercontent.com/andkov/psy532/master/scripts/graphs/main_theme.R")
## @knitr declare_globals
## @knitr load_data
# load Galton's data. read more:
ds <- HistData::Galton
head(ds)
nrow(ds)
??
## @knitr tweak_data
ds$parent_cm <- ds$parent * 2.54
ds$child_cm <- ds$child * 2.54
## @kntir basic_table
ds$parent_cm <- ds$parent * c(2.54)
ds$child_cm <- ds$child * c(2.54)
head(ds)
ds$parent_cm <- round(ds$parent * c(2.54),1)
ds$child_cm <- ds$child * c(2.54)
head(ds)
ds$parent_cm <- round(ds$parent * c(2.54),4)
ds$child_cm <- ds$child * c(2.54)
head(ds)
round(ds$parent * c(2.54),6)
round(ds$parent * c(2.54),5)
round(ds$parent * c(2.54),7)
rm(list=ls(all=TRUE)) #Clear the memory of variables from previous run. This is not called by knitr, because it's above the first chunk.
cat("\014")
## @knitr load_sources
## @knitr load_packages
library(dplyr) # for data manipulation
library(ggplot2) # for graphing
library(scales) #for formating values in graphs
library(HistData)
library(testit, quietly=TRUE) #For asserts
library(extrafont)
source("https://raw.githubusercontent.com/andkov/psy532/master/scripts/graphs/main_theme.R")
## @knitr declare_globals
## @knitr load_data
# load Galton's data. read more:
ds <- HistData::Galton
head(ds)
nrow(ds)
??
## @knitr tweak_data
ds$parent_cm <- ds$parent * c(2.54)
ds$child_cm <- ds$child * c(2.54)
head(ds)
g <- ggplot2::ggplot(ds, aes(x=children, y=parent))
g <- g + geom_point()
g
g <- ggplot2::ggplot(ds, aes(x=child, y=parent))
g <- g + geom_point()
g
g <- ggplot2::ggplot(ds, aes(x=child, y=parent))
g <- g + geom_point()
g <- g + main_theme
g
g <- ggplot2::ggplot(ds, aes(x=child, y=parent))
g <- g + geom_point()
g <- g + geom_smooth()
g <- g + main_theme
g
g <- ggplot2::ggplot(ds, aes(x=child, y=parent))
g <- g + geom_point()
g <- g + geom_smooth(method=lm)
g <- g + main_theme
g
g <- ggplot2::ggplot(ds, aes(x=child, y=parent))
g <- g + geom_point()
g <- g + geom_smooth(method=lm, se=F)
g <- g + main_theme
g
g <- ggplot2::ggplot(ds, aes(x=child, y=parent))
g <- g + geom_point()
g <- g + geom_smooth(method=lm, se=T)
g <- g + main_theme
g
??geom_smooth
Rxy <- corr(ds$parent, ds$childe)
Rxy <- corr(ds$parent, ds$child)
Rxy <- cor(ds$parent, ds$child)
Sy
(Sy <- sd(ds$parent))
(Sx <- sd(ds$child))
(Rxy <- cor(ds$parent, ds$child))
m1 <- glm(parent ~ 1 + child, data=ds)
summary(m1)
coeff(m1)
coef(m1)
b <- coef(m1)
(b <- coef(m1))
b
(b <- coef(m1)["child"])
Rxy
Sy/Sx
bprime <- Rxy*(Sy/Sx)
bprime
b
(b <- coef(m1)["child"][1])
(b <- coef(m1)["child"][[1]])
b
bprime
